============================= DB =================================
CREATE TYPE role_users AS ENUM('ADMIN', 'CUSTOMER');

CREATE TABLE users(
  id_user         SERIAL PRIMARY KEY,
  full_name       VARCHAR (255) NOT NULL,
  email           VARCHAR (255) NOT NULL,
  role            role_users NOT NULL,
  username        VARCHAR (50) UNIQUE NOT NULL, 
  password        VARCHAR (50) NOT NULL, 
  address         VARCHAR (255) NOT NULL,
  phone_number    VARCHAR (20) NOT NULL,
  created_at      TIMESTAMP NOT NULL
);

CREATE TABLE categories(
  id_category     SERIAL PRIMARY KEY,
  name            VARCHAR (50) NOT NULL
);

CREATE TABLE products(
  id_product      SERIAL PRIMARY KEY,
  name            VARCHAR (100) NOT NULL,
  description     VARCHAR (255) NOT NULL,
  price           INT NOT NULL,
  stock           INT NOT NULL,
  file		  VARCHAR (255) NOT NULL,
  category_id     INT NOT NULL,
  user_id         INT NOT NULL,
  CONSTRAINT      fk_category FOREIGN KEY(category_id) REFERENCES categories(id_category),
  CONSTRAINT      fk_user FOREIGN KEY(user_id) REFERENCES users(id_user)
);

CREATE TABLE cart_items(
  id_cart_item    SERIAL PRIMARY KEY,
  qty             INT NOT NULL,
  user_id         INT NOT NULL,
  product_id      INT NOT NULL,
  CONSTRAINT      fk_user FOREIGN KEY(user_id) REFERENCES users(id_user),
  CONSTRAINT      fk_product FOREIGN KEY(product_id) REFERENCES products(id_product)
);

CREATE TABLE payment_details(
  id_payment      SERIAL PRIMARY KEY,
  amount          INT NOT NULL,
  provider        VARCHAR (50) NOT NULL,
  user_id         INT NOT NULL,
  CONSTRAINT      fk_user FOREIGN KEY(user_id) REFERENCES users(id_user)
);

CREATE TYPE order_status AS ENUM('PROCESSING', 'DELIVERED');

CREATE TABLE orders(
  id_order        SERIAL PRIMARY KEY,
  no_resi         VARCHAR (50) NOT NULL,
  status          order_status NOT NULL,
  order_date      TIMESTAMP NOT NULL,
  total_price     INT NOT NULL,
  user_id         INT NOT NULL,
  payment_id      INT NOT NULL,
  CONSTRAINT      fk_user FOREIGN KEY(user_id) REFERENCES users(id_user),
  CONSTRAINT      fk_payment FOREIGN KEY(payment_id) REFERENCES payment_details(id_payment)
);

CREATE TABLE order_details(
  id_order_detail SERIAL PRIMARY KEY,
  qty             INT NOT NULL,
  price           INT NOT NULL,
  order_id        INT NOT NULL,
  product_id      INT NOT NULL,
  CONSTRAINT      fk_order FOREIGN KEY(order_id) REFERENCES orders(id_order),
  CONSTRAINT      fk_product FOREIGN KEY(product_id) REFERENCES products(id_product)
);


============================= BARU =================================
products
-
id_product      int IDENTITY
name            string
desc            string
price           int=0
stock           int=0
category_id     int FK >- categories.id_category
user_id         int FK >- users.id_user

categories
-
id_category     int IDENTITY
name            string

orders
-
id_order        int IDENTITY
no_resi         string
status          enum
order_date      dateTime default=GETUTCDATE()
total_price     int=0
user_id         int FK >- users.id_user
payment_id      int FK >- payment_details.id_payment


order_details
-
id_order_detail int IDENTITY
qty             int=0
price           int=0
order_id        int FK >- orders.id_order
product_id      int FK >- products.id_product

users
-
id_user         int IDENTITY
full_name       string
email           string unique
role            enum
username        string unique
password        string
address         string
phone_number    string unique
created_at      dateTime default=GETUTCDATE()

cart_items
-
id_cart_item    int IDENTITY
qty             int=0
user_id         int FK >- users.id_user
product_id      int FK >- products.id_product

payment_details
-
id_payment      int IDENTITY
amount          int=0
provider        string
status          enum
user_id         int FK >- users.id_user



=============lama=============================================
products
-
id_product      int IDENTITY
name            string
desc            string
price           int=0
stock           int=0
category_id     int FK >- categories.id_category
shop_id         int FK >- shops.id_shop

categories
-
id_category     int IDENTITY
name            string

orders
-
id_order        int IDENTITY
no_resi         string
status          enum
order_date      dateTime default=GETUTCDATE()
total_price     int=0
user_id         int FK >- users.id_user
payment_id      int FK >- payment_details.id_payment


order_details
-
id_order_detail int IDENTITY
qty             int=0
price           int=0
order_id        int FK >- orders.id_order
product_id      int FK >- products.id_product

users
-
id_user         int IDENTITY
full_name       string
email           string unique
role            enum
username        string unique
password        string
address         string
phone_number    string unique
created_at      dateTime default=GETUTCDATE()

cart_items
-
id_cart_item    int IDENTITY
qty             int=0
user_id         int FK >- users.id_user
product_id      int FK >- products.id_product

payment_details
-
id_payment      int IDENTITY
amount          int=0
provider        string
status          enum
user_id         int FK >- users.id_user

shops
-
id_shop         int IDENTITY
name            string unique
address_shop    string
user_id         int FK >- users.id_user
=============lama=============================================



-
# amount di table payment detail gatau buat apa
# users
# categories
# products
# cart_items
# payment_details
# orders
# order_details


https://app.quickdatabasediagrams.com/#/d/169EOK

fitur:
-admin
1. tambah barang
2. edit barang

-user
1. filer category
2. 

admin:
- dashboard
- product
- productedit
- categories
- categoriesedit
- orders
- admin

user:
- home
- allproducts
- cart
- categories
- categoriesspecific
- product/{id}
- history (download)
- account
- searchproduct


Controller:
Logout:
- cari di pzn dia getpostdelete??

DashboarController
- index		(GET)

ProductController
- index		(GET)
- create	(GET)
- store		(POST)
- edit		(GET)
- update	(PUT) 
- destroy	(DELETE)

CategoryController
- index		(GET)
- create	(GET)
- store		(POST)
- edit		(GET)
- update	(PUT) 
- destroy	(DELETE)

OrderController
- index		(GET)
- download	(GET)

AdminController
- index		(GET)
- store		(POST) 
- destroy	(DELETE)

Dashboard
Products
Categories
Orders
Admins
Logout


nama barang 			| Harga (dollar)| Harga (rupiah)
Promo Acer Nitro 5 - An515 	| 735.95	| 12000000
Laptop gaming dengan spesifikasi kelas atas dan harga terjangkau.

HP Victus Gaming 16 RTX306 	| 1014.75	| 16200000
Laptop gaming dengan desain yang menarik dan performa grafis yang kuat.

Lenovo Ideapad Gaming 3Â 	| 704.69	| 11300000
Laptop gaming dengan performa solid dan harga yang bersahabat.


Asus Tuf Gaming Fx505d		| 814.31	| 13600000
Laptop gaming tahan lama dengan desain kokoh dan performa yang handal.


Lenovo Yoga 7 14IRL8		| 979.05	| 15700000
Laptop 2-in-1 dengan desain yang elegan dan fitur touchscreen.


Lenovo LOQ 15 Intel Core i5	| 782		| 12540000
Laptop bisnis dengan performa yang dapat diandalkan dan harga yang kompetitif.


=============================================================
Samsung Galaxy A30s		| 94		| 2000000
Smartphone menengah dengan kamera yang mumpuni dan baterai tahan lama.


iPhone 11 64GB, White		| 392.65	| 6300000
iPhone terbaru dengan desain elegan, kamera berkualitas, dan performa yang cepat.


Hp Vivo Y27 Ram 6/128gb		| 174.51	| 2800000
Smartphone dengan spesifikasi menengah yang cocok untuk penggunaan sehari-hari.

Realme 10 8gb/256gb		| 155.81	| 2500000
Smartphone dengan harga terjangkau namun memiliki performa yang handal.


Xiaomi Redmi K60 Ultra 5G	| 579.62	| 9300000
Smartphone 5G dengan performa tinggi dan harga yang terjangkau.


Samsung Galaxy S24		| 872.55	| 1400000
Smartphone entry-level dengan desain yang menarik dan fitur yang lengkap.

=============================================================

KZ ZSN Pro X Earphones		| 13		| 208000
Earphones dengan kualitas suara yang baik dan harga yang terjangkau.


Keyboard Keychron k3		| 93		| 1500000
Keyboard mekanik dengan desain yang elegan dan koneksi nirkabel.


Lamzu Atlantis 55g Wireless	| 115.30	| 1850000
Mouse wireless dengan desain ergonomis dan performa yang responsif.


Nakamichi NHP-X2		| 8.73		| 140000
Earphones dengan desain yang stylish dan kualitas suara yang baik.


Cooling Pad Laptop Gaming	| 21.25		| 340000
Cooling pad dengan desain yang ergonomis dan kipas yang efisien.


5200mAh Mini Power Bank		| 24		| 385000
Power bank portabel dengan kapasitas yang cukup untuk penggunaan sehari-hari.




no seri:
PQM6UAX719
HMS2D80A2I
IO8984WBSQ
Y8BW947NGD




12000000
 2000000
  208000
14208000


16200000
 6300000
22500000


============================================= FIX DB ===========================================================

CREATE TYPE role_users AS ENUM('ADMIN', 'CUSTOMER');

CREATE TABLE users(
  id_user         SERIAL PRIMARY KEY,
  full_name       VARCHAR (255) NOT NULL,
  email           VARCHAR (255) NOT NULL,
  role            role_users NOT NULL,
  username        VARCHAR (50) UNIQUE NOT NULL, 
  password        VARCHAR (50) NOT NULL, 
  address         VARCHAR (255) NOT NULL,
  phone_number    VARCHAR (20) NOT NULL,
  created_at      TIMESTAMP default now()
);

CREATE TABLE categories(
  id_category     SERIAL PRIMARY KEY,
  name            VARCHAR (50) NOT NULL
);

CREATE TABLE products(
  id_product      SERIAL PRIMARY KEY,
  name            VARCHAR (100) NOT NULL,
  description     VARCHAR (255) NOT NULL,
  price           INT NOT NULL,
  stock           INT NOT NULL,
  file            VARCHAR (255) NOT NULL,
  views_count	  INT NOT NULL DEFAULT 0,
  cart_count 	  INT NOT NULL DEFAULT 0,
  sales_count	  INT NOT NULL DEFAULT 0,
  created_at      TIMESTAMP default now(),
  category_id     INT NOT NULL,
  user_id         INT NOT NULL,
  CONSTRAINT      fk_category FOREIGN KEY(category_id) REFERENCES categories(id_category),
  CONSTRAINT      fk_user FOREIGN KEY(user_id) REFERENCES users(id_user)
);

CREATE TABLE cart_items(
  id_cart_item    SERIAL PRIMARY KEY,
  qty             INT NOT NULL,
  user_id         INT NOT NULL,
  product_id      INT NOT NULL,
  CONSTRAINT      fk_user FOREIGN KEY(user_id) REFERENCES users(id_user),
  CONSTRAINT      fk_product FOREIGN KEY(product_id) REFERENCES products(id_product)
);

CREATE TABLE payment_details(
  id_payment      SERIAL PRIMARY KEY,
  amount          INT NOT NULL,
  provider        VARCHAR (50) NOT NULL,
  created_at      TIMESTAMP default now(),
  user_id         INT NOT NULL,
  CONSTRAINT      fk_user FOREIGN KEY(user_id) REFERENCES users(id_user)
);

CREATE TYPE order_status AS ENUM('PROCESSING', 'DELIVERED');

CREATE TABLE orders(
  id_order        SERIAL PRIMARY KEY,
  no_resi         VARCHAR (50) NOT NULL,
  status          order_status NOT NULL,
  total_price     INT NOT NULL,
  order_date      TIMESTAMP default now(),
  user_id         INT NOT NULL,
  payment_id      INT NOT NULL,
  CONSTRAINT      fk_user FOREIGN KEY(user_id) REFERENCES users(id_user),
  CONSTRAINT      fk_payment FOREIGN KEY(payment_id) REFERENCES payment_details(id_payment)
);

CREATE TABLE order_details(
  id_order_detail SERIAL PRIMARY KEY,
  qty             INT NOT NULL,
  order_id        INT NOT NULL,
  product_id      INT NOT NULL,
  CONSTRAINT      fk_order FOREIGN KEY(order_id) REFERENCES orders(id_order),
  CONSTRAINT      fk_product FOREIGN KEY(product_id) REFERENCES products(id_product)
);



=====================================================

-- Insert data ke tabel users
INSERT INTO users (full_name, email, role, username, password, address, phone_number)
VALUES 
  ('Luca Romano', 'lucaromano@gmail.com', 'ADMIN', 'luca', 'luca', 'Jl. Pahlawan No. 123, Jakarta Selatan', '085678901234'),
  ('Marco Conti', 'marcoconti@gmail.com', 'ADMIN', 'marco', 'marco', 'Jl. Merdeka No. 456, Bandung', '081112233445'),
  ('Gaseppe Rossi', 'gasepperossi@gmail.com', 'CUSTOMER', 'rossi', 'rossi', 'Jl. Gatot Subroto No. 101, Yogyakarta', '087654321098'),
  ('Sofia Bianchi', 'sofiabianchi@gmail.com', 'CUSTOMER', 'sofia', 'sofia', 'Jl. Jendral Sudirman No. 202, Malang', '082345678901'),
  ('Giulia Ricci', 'giuliaricci@gmail.com', 'CUSTOMER', 'ricci', 'ricci', 'Jl. Imam Bonjol No. 303, Denpasar', '081234567891');

-- Insert data ke tabel categories
INSERT INTO categories (name)
VALUES 
  ('Laptop'),
  ('Handphone'),
  ('Accessories');

-- Insert data ke tabel products
INSERT INTO products (name, description, price, stock, file, category_id, user_id)
VALUES 
  ('Acer Nitro 5 - An515', 'Laptop gaming dengan spesifikasi kelas atas dan harga terjangkau.', 12000000, 10, 'acernitro.png', 1, 1),
  ('HP Victus Gaming 16 RTX306', 'Laptop gaming dengan desain yang menarik dan performa grafis yang kuat.', 16200000, 11, 'hpvictus.png', 1, 2),
  ('Samsung Galaxy A30s', 'Smartphone menengah dengan kamera yang mumpuni dan baterai tahan lama.', 2000000, 14, 'acernitro.png', 2, 2),
  ('iPhone 11 64GB, White', 'iPhone terbaru dengan desain elegan, kamera berkualitas, dan performa yang cepat.', 6300000, 13, 'iphone116bgb.png', 2, 2),
  ('KZ ZSN Pro X Earphones', 'Earphones dengan kualitas suara yang baik dan harga yang terjangkau.', 208000, 18, 'kzzsnprox.png', 3, 1),
  ('Keyboard Keychron k3', 'Keyboard mekanik dengan desain yang elegan dan koneksi nirkabel.', 1500000, 15, 'keychronk3.png', 3, 1);

-- Insert data ke tabel cart_items
INSERT INTO cart_items (qty, user_id, product_id)
VALUES 
  (2, 3, 2),
  (1, 3, 4),
  (2, 4, 1),
  (1, 4, 3),
  (2, 5, 1),
  (1, 5, 2);

-- Insert data ke tabel payment_details
INSERT INTO payment_details (amount, provider, user_id)
VALUES 
  (50000000, 'BCA', 3),
  (50000000, 'OVO', 3),
  (50000000, 'Midtrans', 4),
  (50000000, 'DANA', 4),
  (50000000, 'GoPay', 5),
  (50000000, 'LinkAja', 5);

-- Insert data ke tabel orders
INSERT INTO orders (no_resi, status, total_price, user_id, payment_id)
VALUES 
  ('PQM6UAX719', 'DELIVERED', 14208000, 3, 1),
  ('HMS2D80A2I', 'DELIVERED', 22500000, 4, 3),
  ('IO8984WBSQ', 'DELIVERED', 1500000, 5, 5),
  ('Y8BW947NGD', 'DELIVERED', 2000000, 3, 1);

-- Insert data ke tabel order_details
INSERT INTO order_details (qty, order_id, product_id)
VALUES 
  (2, 1, 1),
  (2, 1, 3),
  (2, 1, 5),
  (1, 2, 2),
  (1, 2, 4),
  (1, 3, 6),
  (3, 4, 3);





izin bertanya, saya Asadel dari IT B 23
1. Kalo bikin di database, misal ada 'admin', 'seller', 'customer'. Lebih enak bikin 3 tabel, atau 1 tabel(users) tapi ada kolom Enum untuk rolenya?
2. Contoh db toko online sederhana. Dilaporan transaksi, nanti tiap product akan ada 'total_pembelian' nya masing-masing per product untuk laporan (isinya = Harga x jumlah pembalian). Lebih baik bikin kolom 'total_pembelian' di tabel product, atau pake view aja (nanti diitung di view), atau diitung manual nanti saat select kalkulasinya (Harga x jumlah pembalian), atau memang ada cara lain yg lebih enak?
3. Jika saya ingin membuat keranjang/cart per pelanggan nya di php menggunakan session, apakah perlu menambahkan tabel session di database saya?
4. last, database favoritnya apa mas?























































































